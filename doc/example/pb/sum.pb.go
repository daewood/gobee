// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/sum.proto

/*
Package sumpb is a generated protocol buffer package.

It is generated from these files:
	pb/sum.proto

It has these top-level messages:
	SumRequest
	SumResponse
*/
package sumpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// SumRequest is a request for Summator service.
type SumRequest struct {
	// A is the number we're adding to. Can't be zero for the sake of example.
	A int64 `protobuf:"varint,1,opt,name=a" json:"a,omitempty"`
	// B is the number we're adding.
	B int64 `protobuf:"varint,2,opt,name=b" json:"b,omitempty"`
}

func (m *SumRequest) Reset()                    { *m = SumRequest{} }
func (m *SumRequest) String() string            { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()               {}
func (*SumRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SumRequest) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *SumRequest) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type SumResponse struct {
	Sum   int64  `protobuf:"varint,1,opt,name=sum" json:"sum,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *SumResponse) Reset()                    { *m = SumResponse{} }
func (m *SumResponse) String() string            { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()               {}
func (*SumResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SumResponse) GetSum() int64 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *SumResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "sumpb.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "sumpb.SumResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Summator service

type SummatorClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
}

type summatorClient struct {
	cc *grpc.ClientConn
}

func NewSummatorClient(cc *grpc.ClientConn) SummatorClient {
	return &summatorClient{cc}
}

func (c *summatorClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := grpc.Invoke(ctx, "/sumpb.Summator/Sum", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Summator service

type SummatorServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
}

func RegisterSummatorServer(s *grpc.Server, srv SummatorServer) {
	s.RegisterService(&_Summator_serviceDesc, srv)
}

func _Summator_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummatorServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sumpb.Summator/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummatorServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Summator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sumpb.Summator",
	HandlerType: (*SummatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Summator_Sum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/sum.proto",
}

func init() { proto.RegisterFile("pb/sum.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x4d, 0x4a, 0xc0, 0x30,
	0x10, 0x85, 0x49, 0x4b, 0x45, 0xc7, 0x82, 0x1a, 0xba, 0x28, 0xc5, 0x85, 0x64, 0x55, 0x5c, 0x34,
	0xa8, 0xb8, 0xf1, 0x04, 0xae, 0x5b, 0x2f, 0x90, 0x40, 0x28, 0x85, 0x4e, 0x26, 0xe6, 0x47, 0x5c,
	0x7b, 0x05, 0x8f, 0xe6, 0x15, 0x3c, 0x88, 0x34, 0x11, 0x74, 0x37, 0xdf, 0xf0, 0x0d, 0xef, 0x0d,
	0xb4, 0x4e, 0xcb, 0x90, 0x70, 0x72, 0x9e, 0x22, 0xf1, 0x26, 0x24, 0x74, 0x7a, 0xb8, 0x5e, 0x89,
	0xd6, 0xdd, 0x48, 0xe5, 0x36, 0xa9, 0xac, 0xa5, 0xa8, 0xe2, 0x46, 0x36, 0x14, 0x49, 0x8c, 0x00,
	0x4b, 0xc2, 0xd9, 0xbc, 0x26, 0x13, 0x22, 0x6f, 0x81, 0xa9, 0x9e, 0xdd, 0xb0, 0xb1, 0x9e, 0x99,
	0x3a, 0x48, 0xf7, 0x55, 0x21, 0x2d, 0x1e, 0xe1, 0x3c, 0x9b, 0xc1, 0x91, 0x0d, 0x86, 0x5f, 0x42,
	0x1d, 0x12, 0xfe, 0xca, 0xc7, 0xc8, 0x3b, 0x68, 0x8c, 0xf7, 0xe4, 0xf3, 0xc9, 0xd9, 0x5c, 0xe0,
	0xfe, 0x05, 0x4e, 0x97, 0x84, 0xa8, 0x22, 0x79, 0xfe, 0x0c, 0xf5, 0x92, 0x90, 0x5f, 0x4d, 0xb9,
	0xd9, 0xf4, 0x17, 0x3c, 0xf0, 0xff, 0xab, 0x92, 0x20, 0x86, 0x8f, 0xaf, 0xef, 0xcf, 0xaa, 0x13,
	0x17, 0xf2, 0xed, 0x4e, 0x9a, 0x77, 0x85, 0x6e, 0x37, 0xc7, 0x7b, 0x4f, 0xec, 0x56, 0x9f, 0xe4,
	0xf6, 0x0f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x61, 0x6d, 0xa8, 0x5f, 0xf2, 0x00, 0x00, 0x00,
}
